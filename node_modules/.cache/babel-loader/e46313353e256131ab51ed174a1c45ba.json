{"ast":null,"code":"import axios from 'axios';\nexport const FaultTypes = {\n  API_FAULT: 'API_FAULT'\n};\nexport const ApiFault = (fault, requestObject) => {\n  return {\n    type: FaultTypes.API_FAULT,\n    payload: fault,\n    requestObject\n  };\n};\n\nconst thunkHelper = async (dispatch, {\n  BEGIN,\n  SUCCESS\n}, config, requestObject) => {\n  dispatch({\n    type: BEGIN,\n    requestObject\n  });\n  let result;\n\n  try {\n    result = await axios(config);\n  } catch (err) {\n    const fault = {\n      response: err.response,\n      trigger: BEGIN\n    };\n    dispatch(ApiFault(fault, requestObject));\n    return; // throw fault;\n  }\n\n  const _result = result,\n        data = _result.data;\n\n  if (data.Fault) {\n    if (data.Fault.Code === 1) {\n      dispatch({\n        type: SUCCESS,\n        payload: {},\n        requestObject\n      });\n      return;\n    }\n\n    const fault = {\n      fault: data.Fault,\n      trigger: BEGIN\n    };\n    dispatch(ApiFault(fault, requestObject));\n    throw fault;\n  }\n\n  dispatch({\n    type: SUCCESS,\n    payload: data,\n    requestObject\n  });\n  return data;\n};\n\nexport const apiThunkHelper = (dispatch, url, types, requestObject = {}) => {\n  const apiConfig = {\n    method: 'get',\n    // data: requestObject,\n    url: url\n  };\n  return thunkHelper(dispatch, types, apiConfig, requestObject);\n};","map":{"version":3,"sources":["/Users/chak05/TFL/src/redux/util/apiThunkHelper.js"],"names":["axios","FaultTypes","API_FAULT","ApiFault","fault","requestObject","type","payload","thunkHelper","dispatch","BEGIN","SUCCESS","config","result","err","response","trigger","data","Fault","Code","apiThunkHelper","url","types","apiConfig","method"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,SAAS,EAAE;AADW,CAAnB;AAIP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,aAAR,KAA0B;AAC9C,SAAO;AACHC,IAAAA,IAAI,EAAEL,UAAU,CAACC,SADd;AAEHK,IAAAA,OAAO,EAAEH,KAFN;AAGHC,IAAAA;AAHG,GAAP;AAKH,CANM;;AAQP,MAAMG,WAAW,GAAG,OAAOC,QAAP,EAAiB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAjB,EAAmCC,MAAnC,EAA2CP,aAA3C,KAA6D;AAC7EI,EAAAA,QAAQ,CAAC;AACLH,IAAAA,IAAI,EAAEI,KADD;AAELL,IAAAA;AAFK,GAAD,CAAR;AAKA,MAAIQ,MAAJ;;AAEA,MAAI;AACAA,IAAAA,MAAM,GAAG,MAAMb,KAAK,CAACY,MAAD,CAApB;AACH,GAFD,CAEE,OAAOE,GAAP,EAAY;AACV,UAAMV,KAAK,GAAG;AACVW,MAAAA,QAAQ,EAACD,GAAG,CAACC,QADH;AAEVC,MAAAA,OAAO,EAAEN;AAFC,KAAd;AAKAD,IAAAA,QAAQ,CAACN,QAAQ,CAACC,KAAD,EAAQC,aAAR,CAAT,CAAR;AAEA,WARU,CAUV;AACH;;AArB4E,kBAuB9DQ,MAvB8D;AAAA,QAuBtEI,IAvBsE,WAuBtEA,IAvBsE;;AAyB7E,MAAIA,IAAI,CAACC,KAAT,EAAgB;AACZ,QAAID,IAAI,CAACC,KAAL,CAAWC,IAAX,KAAoB,CAAxB,EAA2B;AACvBV,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAEK,OADD;AAELJ,QAAAA,OAAO,EAAE,EAFJ;AAGLF,QAAAA;AAHK,OAAD,CAAR;AAMA;AACH;;AAED,UAAMD,KAAK,GAAG;AACVA,MAAAA,KAAK,EAAEa,IAAI,CAACC,KADF;AAEVF,MAAAA,OAAO,EAAEN;AAFC,KAAd;AAKAD,IAAAA,QAAQ,CAACN,QAAQ,CAACC,KAAD,EAAQC,aAAR,CAAT,CAAR;AAEA,UAAMD,KAAN;AACH;;AAEDK,EAAAA,QAAQ,CAAC;AACLH,IAAAA,IAAI,EAAEK,OADD;AAELJ,IAAAA,OAAO,EAAEU,IAFJ;AAGLZ,IAAAA;AAHK,GAAD,CAAR;AAMA,SAAOY,IAAP;AACH,CArDD;;AAuDA,OAAO,MAAMG,cAAc,GAAG,CAACX,QAAD,EAAWY,GAAX,EAAgBC,KAAhB,EAAuBjB,aAAa,GAAC,EAArC,KAA4C;AAEtE,QAAMkB,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEd;AACAH,IAAAA,GAAG,EAAEA;AAHS,GAAlB;AAMA,SAAOb,WAAW,CAACC,QAAD,EAAWa,KAAX,EAAkBC,SAAlB,EAA6BlB,aAA7B,CAAlB;AACH,CATM","sourcesContent":["import axios from 'axios';\nexport const FaultTypes = {\n    API_FAULT: 'API_FAULT'\n};\n\nexport const ApiFault = (fault, requestObject) => {\n    return {\n        type: FaultTypes.API_FAULT,\n        payload: fault,\n        requestObject\n    };\n};\n\nconst thunkHelper = async (dispatch, {BEGIN, SUCCESS}, config, requestObject) => {\n    dispatch({\n        type: BEGIN,\n        requestObject\n    });\n\n    let result;\n\n    try {\n        result = await axios(config);\n    } catch (err) {\n        const fault = {\n            response:err.response,\n            trigger: BEGIN\n        };\n\n        dispatch(ApiFault(fault, requestObject));\n\n        return;\n\n        // throw fault;\n    }\n\n    const {data} = result;\n\n    if (data.Fault) {\n        if (data.Fault.Code === 1) {\n            dispatch({\n                type: SUCCESS,\n                payload: {},\n                requestObject\n            });\n\n            return;\n        }\n\n        const fault = {\n            fault: data.Fault,\n            trigger: BEGIN\n        };\n\n        dispatch(ApiFault(fault, requestObject));\n\n        throw fault;\n    }\n\n    dispatch({\n        type: SUCCESS,\n        payload: data,\n        requestObject\n    });\n\n    return data;\n};\n\nexport const apiThunkHelper = (dispatch, url, types, requestObject={}) => {\n\n    const apiConfig = {\n        method: 'get',\n        // data: requestObject,\n        url: url\n    };\n\n    return thunkHelper(dispatch, types, apiConfig, requestObject);\n};"]},"metadata":{},"sourceType":"module"}