{"ast":null,"code":"var _jsxFileName = \"/Users/chak05/TFL/src/components/header/header.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport MenuItem from '../menuItem/menuItem';\nimport './header.scss';\n\nconst Header = ({\n  brandText,\n  brandMark,\n  customMenu,\n  isLoaded,\n  menuItems,\n  onClick,\n  retrieveServices\n}) => {\n  useEffect(() => {\n    retrieveServices();\n  }, [retrieveServices]);\n  return React.createElement(\"header\", {\n    className: \"c-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"c-header__brandMark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, brandMark && React.createElement(\"img\", {\n    src: brandMark,\n    alt: brandText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"c-header__brandText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, brandText)), Boolean(menuItems && menuItems.length) && menuItems.map(item => React.createElement(MenuItem, {\n    key: item.id,\n    item: item,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), Boolean(isLoaded && customMenu) && React.createElement(MenuItem, {\n    key: customMenu.id,\n    item: customMenu,\n    onClick: customMenu.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nHeader.displayName = 'Header';\nHeader.propTypes = {\n  /** Header text to be displayed */\n  brandText: PropTypes.string,\n\n  /** The image for the brand */\n  brandMark: PropTypes.node,\n  isLoaded: PropTypes.bool,\n\n  /* Menu Items */\n  menuItems: PropTypes.arrayOf(PropTypes.shape({})),\n  onClick: PropTypes.func,\n  retrieveServices: PropTypes.func\n};\nexport default Header;","map":{"version":3,"sources":["/Users/chak05/TFL/src/components/header/header.jsx"],"names":["PropTypes","React","useEffect","MenuItem","Header","brandText","brandMark","customMenu","isLoaded","menuItems","onClick","retrieveServices","Boolean","length","map","item","id","displayName","propTypes","string","node","bool","arrayOf","shape","func"],"mappings":";AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA,QAAnC;AAA6CC,EAAAA,SAA7C;AAAwDC,EAAAA,OAAxD;AAAiEC,EAAAA;AAAjE,CAAD,KAAwF;AACnGT,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,gBAAgB;AACjB,GAFM,EAEJ,CAACA,gBAAD,CAFI,CAAT;AAIA,SACI;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,SAAS,IAAI;AAAK,IAAA,GAAG,EAAEA,SAAV;AAAqB,IAAA,GAAG,EAAED,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCA,SAAtC,CAJJ,CADJ,EAOKO,OAAO,CAACH,SAAS,IAAIA,SAAS,CAACI,MAAxB,CAAP,IAA0CJ,SAAS,CAACK,GAAV,CAAeC,IAAD,IACrD,oBAAC,QAAD;AACA,IAAA,GAAG,EAAEA,IAAI,CAACC,EADV;AAEA,IAAA,IAAI,EAAED,IAFN;AAGA,IAAA,OAAO,EAAEL,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADuC,CAP/C,EAcKE,OAAO,CAACJ,QAAQ,IAAID,UAAb,CAAP,IAAmC,oBAAC,QAAD;AAChC,IAAA,GAAG,EAAEA,UAAU,CAACS,EADgB;AAEhC,IAAA,IAAI,EAAET,UAF0B;AAGhC,IAAA,OAAO,EAAEA,UAAU,CAACG,OAHY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdxC,CADJ;AAsBH,CA3BD;;AA6BAN,MAAM,CAACa,WAAP,GAAqB,QAArB;AACAb,MAAM,CAACc,SAAP,GAAmB;AACf;AACAb,EAAAA,SAAS,EAAEL,SAAS,CAACmB,MAFN;;AAGf;AACAb,EAAAA,SAAS,EAAEN,SAAS,CAACoB,IAJN;AAKfZ,EAAAA,QAAQ,EAAER,SAAS,CAACqB,IALL;;AAMf;AACAZ,EAAAA,SAAS,EAAET,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,KAAV,CAAgB,EAAhB,CAAlB,CAPI;AASfb,EAAAA,OAAO,EAAEV,SAAS,CAACwB,IATJ;AAUfb,EAAAA,gBAAgB,EAAEX,SAAS,CAACwB;AAVb,CAAnB;AAcA,eAAepB,MAAf","sourcesContent":["\nimport PropTypes from 'prop-types';\nimport React, {useEffect} from 'react';\nimport MenuItem from '../menuItem/menuItem';\nimport './header.scss';\n\nconst Header = ({brandText, brandMark, customMenu, isLoaded, menuItems, onClick, retrieveServices}) => {\n    useEffect(() => {\n        retrieveServices();\n      }, [retrieveServices]);\n\n    return(\n        <header className=\"c-header\">\n            <div>\n                <div className=\"c-header__brandMark\">\n                    {brandMark && <img src={brandMark} alt={brandText} />}\n                </div>\n                <div className=\"c-header__brandText\">{brandText}</div>\n            </div>\n            {Boolean(menuItems && menuItems.length) && menuItems.map((item) => (\n                <MenuItem \n                key={item.id}\n                item={item}\n                onClick={onClick}\n                />\n            ))}\n            {Boolean(isLoaded && customMenu) && <MenuItem \n                key={customMenu.id}\n                item={customMenu}\n                onClick={customMenu.onClick}\n            />}\n        </header>\n    );\n};\n\nHeader.displayName = 'Header';\nHeader.propTypes = {\n    /** Header text to be displayed */\n    brandText: PropTypes.string,\n    /** The image for the brand */\n    brandMark: PropTypes.node,\n    isLoaded: PropTypes.bool,\n    /* Menu Items */\n    menuItems: PropTypes.arrayOf(PropTypes.shape({\n    })),\n    onClick: PropTypes.func,\n    retrieveServices: PropTypes.func\n};\n\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}