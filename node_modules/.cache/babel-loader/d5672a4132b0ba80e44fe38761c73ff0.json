{"ast":null,"code":"import pathOr from 'ramda/src/pathOr';\nimport { createSelector } from 'reselect';\nexport const RoutesClient = store => {\n  return pathOr([], ['searchClient'], store);\n};\nexport const SearchTerms = createSelector([RoutesClient], routes => {\n  return pathOr([], ['searchList'], routes);\n});\nconst SearchTerm = createSelector([RoutesClient], routes => {\n  return pathOr([], ['searchTerm'], routes);\n});\nexport const Routes = createSelector([RoutesClient, SearchTerm], (routes, searchTerm) => {\n  return pathOr([], [searchTerm], routes);\n});\nexport const Fault = createSelector([], store => {\n  return pathOr(null, ['routesFault'], store);\n});\nexport const RoutesItemsIsLoading = createSelector([RoutesClient], routesClient => {\n  return pathOr([], ['isLoading'], routesClient);\n});\nexport const RoutesItemsIsLoaded = createSelector([Routes, RoutesItemsIsLoading], (searchResults, isLoading) => {\n  return searchResults !== [] && !isLoading;\n});","map":{"version":3,"sources":["/Users/chak05/TFL/src/redux/search/search.selectors.js"],"names":["pathOr","createSelector","RoutesClient","store","SearchTerms","routes","SearchTerm","Routes","searchTerm","Fault","RoutesItemsIsLoading","routesClient","RoutesItemsIsLoaded","searchResults","isLoading"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,SAAQC,cAAR,QAA6B,UAA7B;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,SAAOH,MAAM,CAAC,EAAD,EAAK,CAAC,cAAD,CAAL,EAAuBG,KAAvB,CAAb;AACH,CAFM;AAIP,OAAO,MAAMC,WAAW,GAAGH,cAAc,CAAC,CACtCC,YADsC,CAAD,EAErCG,MAAD,IAAY;AACX,SAAOL,MAAM,CAAC,EAAD,EAAK,CAAC,YAAD,CAAL,EAAqBK,MAArB,CAAb;AACH,CAJwC,CAAlC;AAMP,MAAMC,UAAU,GAAGL,cAAc,CAAC,CAC9BC,YAD8B,CAAD,EAE7BG,MAAD,IAAY;AACX,SAAOL,MAAM,CAAC,EAAD,EAAK,CAAC,YAAD,CAAL,EAAqBK,MAArB,CAAb;AACH,CAJgC,CAAjC;AAMA,OAAO,MAAME,MAAM,GAAGN,cAAc,CAAC,CACjCC,YADiC,EAEjCI,UAFiC,CAAD,EAGjC,CAACD,MAAD,EAASG,UAAT,KAAwB;AACvB,SAAOR,MAAM,CAAC,EAAD,EAAK,CAACQ,UAAD,CAAL,EAAmBH,MAAnB,CAAb;AACH,CALmC,CAA7B;AAOP,OAAO,MAAMI,KAAK,GAAGR,cAAc,CAAC,EAAD,EAC/BE,KAAD,IAAW;AACV,SAAOH,MAAM,CAAC,IAAD,EAAO,CAAC,aAAD,CAAP,EAAwBG,KAAxB,CAAb;AACH,CAHkC,CAA5B;AAKP,OAAO,MAAMO,oBAAoB,GAAGT,cAAc,CAAC,CAC/CC,YAD+C,CAAD,EAE9CS,YAAD,IAAkB;AACjB,SAAOX,MAAM,CAAC,EAAD,EAAK,CAAC,WAAD,CAAL,EAAoBW,YAApB,CAAb;AACH,CAJiD,CAA3C;AAMP,OAAO,MAAMC,mBAAmB,GAAGX,cAAc,CAAC,CAC9CM,MAD8C,EAE9CG,oBAF8C,CAAD,EAG9C,CAACG,aAAD,EAAgBC,SAAhB,KAA8B;AAC7B,SAAOD,aAAa,KAAK,EAAlB,IAAwB,CAACC,SAAhC;AACH,CALgD,CAA1C","sourcesContent":["import pathOr from 'ramda/src/pathOr';\nimport {createSelector} from 'reselect';\n\nexport const RoutesClient = (store) => {\n    return pathOr([], ['searchClient'], store);\n};\n\nexport const SearchTerms = createSelector([\n    RoutesClient\n], (routes) => {\n    return pathOr([], ['searchList'], routes);\n});\n\nconst SearchTerm = createSelector([\n    RoutesClient\n], (routes) => {\n    return pathOr([], ['searchTerm'], routes);\n});\n\nexport const Routes = createSelector([\n    RoutesClient,\n    SearchTerm\n], (routes, searchTerm) => {\n    return pathOr([], [searchTerm], routes);\n});\n\nexport const Fault = createSelector([\n], (store) => {\n    return pathOr(null, ['routesFault'], store);\n});\n\nexport const RoutesItemsIsLoading = createSelector([\n    RoutesClient\n], (routesClient) => {\n    return pathOr([], ['isLoading'], routesClient);\n});\n\nexport const RoutesItemsIsLoaded = createSelector([\n    Routes,\n    RoutesItemsIsLoading\n], (searchResults, isLoading) => {\n    return searchResults !== [] && !isLoading;\n});"]},"metadata":{},"sourceType":"module"}